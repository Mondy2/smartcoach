package com.example.smartcoach;

import android.content.Intent;
import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.example.smartcoach.models.AutoGeneratedWorkout;
import com.example.smartcoach.models.UserProfile;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.snackbar.Snackbar;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;

public class GenerateWorkoutActivity extends AppCompatActivity {
    private FirebaseAuth auth;
    private DatabaseReference profilesDb;
    private DatabaseReference userWorkoutsDb;
    private Spinner fitnessGoalSpinner;
    private Spinner trainingModeSpinner;
    private Spinner muscleGroupSpinner;
    private EditText weightInput;
    private EditText heightInput;
    private TextView workoutResult;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_generate_workout);

        // Ініціалізація Firebase
        auth = FirebaseAuth.getInstance();
        profilesDb = FirebaseDatabase.getInstance().getReference("UserProfile");

        // Ініціалізація UI
        fitnessGoalSpinner = findViewById(R.id.fitnessGoalSpinner);
        trainingModeSpinner = findViewById(R.id.trainingModeSpinner);
        muscleGroupSpinner = findViewById(R.id.muscleGroupSpinner);
        weightInput = findViewById(R.id.weightInput);
        heightInput = findViewById(R.id.heightInput);
        workoutResult = findViewById(R.id.workoutResult);
        Button generateButton = findViewById(R.id.generateButton);
        Button viewListButton = findViewById(R.id.btnViewList);

        // Налаштування Bottom Navigation
        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setSelectedItemId(R.id.nav_generate_workout); // Встановлюємо поточний елемент активним
        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
            int itemId = item.getItemId();
            if (itemId == R.id.nav_home) {
                startActivity(new Intent(GenerateWorkoutActivity.this, HomeActivity.class));
                finish();
                return true;
            } else if (itemId == R.id.nav_generate_workout) {
                // Уже знаходимося на цій сторінці
                return true;
            } else if (itemId == R.id.nav_settings) {
                // Перехід на сторінку налаштувань
                startActivity(new Intent(GenerateWorkoutActivity.this, SettingsActivity.class));
                finish();
                return true;
            }
            return false;
        });

        // Налаштування Spinner для цілей
        ArrayAdapter<CharSequence> goalAdapter = ArrayAdapter.createFromResource(
                this, R.array.fitness_goals, android.R.layout.simple_spinner_item);
        goalAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        fitnessGoalSpinner.setAdapter(goalAdapter);

        // Налаштування Spinner для рівня підготовки
        ArrayAdapter<CharSequence> modeAdapter = ArrayAdapter.createFromResource(
                this, R.array.training_modes, android.R.layout.simple_spinner_item);
        modeAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        trainingModeSpinner.setAdapter(modeAdapter);

        // Налаштування Spinner для групи м’язів
        ArrayAdapter<CharSequence> muscleAdapter = ArrayAdapter.createFromResource(
                this, R.array.muscle_groups, android.R.layout.simple_spinner_item);
        muscleAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        muscleGroupSpinner.setAdapter(muscleAdapter);

        // Обробники кнопок
        generateButton.setOnClickListener(v -> generateWorkout());
        viewListButton.setOnClickListener(v -> {
            startActivity(new Intent(this, WorkoutListActivity.class));
        });
    }

    private void generateWorkout() {
        // Перевірка авторизації
        if (auth.getCurrentUser() == null) {
            Snackbar.make(findViewById(R.id.generateButton),
                    "Будь ласка, увійдіть спочатку", Snackbar.LENGTH_SHORT).show();
            return;
        }

        // Отримання даних користувача
        String userId = auth.getCurrentUser().getUid();
        userWorkoutsDb = FirebaseDatabase.getInstance()
                .getReference("AutoGeneratedWorkouts")
                .child(userId);

        String fitnessGoal = fitnessGoalSpinner.getSelectedItem().toString();
        String trainingMode = trainingModeSpinner.getSelectedItem().toString();
        String muscleGroup = muscleGroupSpinner.getSelectedItem().toString();

        // Отримання ваги та зросту
        String weightStr = weightInput.getText().toString();
        String heightStr = heightInput.getText().toString();

        // Перевірка введених даних
        if (weightStr.isEmpty() || heightStr.isEmpty()) {
            Snackbar.make(findViewById(R.id.generateButton),
                    "Будь ласка, введіть вашу вагу та зріст", Snackbar.LENGTH_SHORT).show();
            return;
        }

        float weight;
        int height;
        try {
            weight = Float.parseFloat(weightStr);
            height = Integer.parseInt(heightStr);
        } catch (NumberFormatException e) {
            Snackbar.make(findViewById(R.id.generateButton),
                    "Неправильний формат ваги або зросту", Snackbar.LENGTH_SHORT).show();
            return;
        }

        // Збереження профілю користувача з вагою та зростом
        String profileId = profilesDb.push().getKey();
        UserProfile profile = new UserProfile(profileId, userId, fitnessGoal, trainingMode);
        profile.setWeight(weight);
        profile.setHeight(height);
        profilesDb.child(userId).setValue(profile)
                .addOnFailureListener(e -> Snackbar.make(
                        findViewById(R.id.generateButton),
                        "Помилка збереження профілю: " + e.getMessage(),
                        Snackbar.LENGTH_LONG
                ).show());

        // Генерація вправ на основі групи м’язів і цілі
        List<String> exercises = new ArrayList<>();
        switch (muscleGroup) {
            case "Груди":
                exercises.add("Віджимання: 4 підходи по 12");
                exercises.add("Жим лежачи: 3 підходи по 10");
                exercises.add("Розведення гантелей: 3 підходи по 12");
                break;
            case "Спина":
                exercises.add("Підтягування: 3 підходи по 8");
                exercises.add("Станова тяга: 3 підходи по 8");
                exercises.add("Тяга штанги в нахилі: 3 підходи по 10");
                break;
            case "Руки":
                exercises.add("Згинання рук з гантелями: 3 підходи по 12");
                exercises.add("Віджимання на трицепс: 3 підходи по 10");
                exercises.add("Молоткові згинання: 3 підходи по 12");
                break;
            case "Ноги":
                exercises.add("Присідання: 4 підходи по 10");
                exercises.add("Випади: 3 підходи по 12");
                exercises.add("Жим ногами: 3 підходи по 10");
                break;
            case "Прес":
                exercises.add("Планка: 3 підходи по 30 сек");
                exercises.add("Скручування «велосипед»: 3 підходи по 15");
                exercises.add("Підйом ніг: 3 підходи по 12");
                break;
            case "Плечі":
                exercises.add("Жим плечима: 3 підходи по 10");
                exercises.add("Бокові підйоми гантелей: 3 підходи по 12");
                exercises.add("Фронтальні підйоми гантелей: 3 підходи по 12");
                break;
            default:
                // Якщо група м’язів не вибрана або невідома, використовуємо ціль
                switch (fitnessGoal) {
                    case "Схуднення":
                        exercises.add("Біг: 15 хв");
                        exercises.add("Стрибки «Джек»: 3 підходи по 20");
                        exercises.add("Скручування «велосипед»: 3 підходи по 15");
                        break;
                    case "Набір м’язової маси":
                        exercises.add("Віджимання: 4 підходи по 12");
                        exercises.add("Присідання: 4 підходи по 10");
                        exercises.add("Станова тяга: 3 підходи по 8");
                        break;
                    default:
                        exercises.add("Планка: 3 підходи по 30 сек");
                        exercises.add("Берпі: 3 підходи по 10");
                        exercises.add("Розтяжка: 10 хв");
                }
        }

        // Перемішуємо вправи і вибираємо перші 3
        Collections.shuffle(exercises);
        String suggestedWorkout = String.join("\n", exercises.subList(0, Math.min(3, exercises.size())));

        // Налаштування параметрів тренування з урахуванням ваги та зросту
        String intensityLevel = trainingMode.equals("Початківець") ? "Низька"
                : trainingMode.equals("Середній") ? "Середня" : "Висока";
        int sets = trainingMode.equals("Початківець") ? 3 : 4;
        int duration = 45;

        // Корекція тривалості та інтенсивності на основі ваги та зросту
        if (weight > 90 || height > 190) {
            duration = 40; // Зменшуємо навантаження для більш важких/високих користувачів
            intensityLevel = "Середня"; // Знижуємо інтенсивність
        } else if (weight < 60 && height < 160) {
            duration = 50; // Збільшуємо для більш легких/низьких
        }

        String date = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
        String workoutId = userWorkoutsDb.push().getKey();

        AutoGeneratedWorkout workout = new AutoGeneratedWorkout(
                workoutId, userId, suggestedWorkout,
                duration, intensityLevel, sets, date, fitnessGoal
        );

        // Збереження тренування
        userWorkoutsDb.child(workoutId)
                .setValue(workout)
                .addOnSuccessListener(aVoid -> {
                    workoutResult.setText("Згенероване тренування:\n" + suggestedWorkout);
                    Snackbar.make(findViewById(R.id.generateButton),
                            "Тренування збережено!", Snackbar.LENGTH_SHORT).show();
                })
                .addOnFailureListener(e -> Snackbar.make(
                        findViewById(R.id.generateButton),
                        "Помилка: " + e.getMessage(),
                        Snackbar.LENGTH_LONG
                ).show());
    }
}


//    package com.example.smartcoach;
//
//    import android.content.Intent;
//    import android.os.Bundle;
//    import android.widget.ArrayAdapter;
//    import android.widget.Button;
//    import android.widget.EditText;
//    import android.widget.Spinner;
//    import android.widget.TextView;
//
//    import androidx.appcompat.app.AppCompatActivity;
//
//    import com.example.smartcoach.models.AutoGeneratedWorkout;
//    import com.example.smartcoach.models.UserProfile;
//    import com.example.smartcoach.WorkoutListActivity;
//    import com.google.android.material.bottomnavigation.BottomNavigationView;
//    import com.google.android.material.snackbar.Snackbar;
//    import com.google.firebase.auth.FirebaseAuth;
//    import com.google.firebase.database.DatabaseReference;
//    import com.google.firebase.database.FirebaseDatabase;
//
//    import java.text.SimpleDateFormat;
//    import java.util.ArrayList;
//    import java.util.Collections;
//    import java.util.Date;
//    import java.util.List;
//
//    public class GenerateWorkoutActivity extends AppCompatActivity {
//        private FirebaseAuth auth;
//        private DatabaseReference profilesDb;
//        private DatabaseReference userWorkoutsDb;
//        private Spinner fitnessGoalSpinner;
//        private Spinner trainingModeSpinner;
//        private Spinner muscleGroupSpinner;
//        private EditText weightInput;
//        private EditText heightInput;
//        private TextView workoutResult;
//
//        @Override
//        protected void onCreate(Bundle savedInstanceState) {
//            super.onCreate(savedInstanceState);
//            setContentView(R.layout.activity_generate_workout);
//
//            // Инициализация Firebase
//            auth = FirebaseAuth.getInstance();
//            profilesDb = FirebaseDatabase.getInstance().getReference("UserProfile");
//
//            // Инициализация UI
//            fitnessGoalSpinner = findViewById(R.id.fitnessGoalSpinner);
//            trainingModeSpinner = findViewById(R.id.trainingModeSpinner);
//            muscleGroupSpinner = findViewById(R.id.muscleGroupSpinner);
//            weightInput = findViewById(R.id.weightInput);
//            heightInput = findViewById(R.id.heightInput);
//            workoutResult = findViewById(R.id.workoutResult);
//            Button generateButton = findViewById(R.id.generateButton);
//            Button viewListButton = findViewById(R.id.btnViewList);
//
//            // Настройка Bottom Navigation
//            BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
//            bottomNavigationView.setSelectedItemId(R.id.nav_generate_workout); // Устанавливаем текущий элемент активным
//            bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
//                int itemId = item.getItemId();
//                if (itemId == R.id.nav_home) {
//                    startActivity(new Intent(GenerateWorkoutActivity.this, HomeActivity.class));
//                    finish();
//                    return true;
//                } else if (itemId == R.id.nav_generate_workout) {
//                    // Уже находимся на этой странице
//                    return true;
//                } else if (itemId == R.id.nav_settings) {
//                    // Переход на страницу настроек
//                    startActivity(new Intent(GenerateWorkoutActivity.this, SettingsActivity.class));
//                    finish();
//                    return true;
//                }
//                return false;
//            });
//
//            // Настройка Spinner для целей
//            ArrayAdapter<CharSequence> goalAdapter = ArrayAdapter.createFromResource(
//                    this, R.array.fitness_goals, android.R.layout.simple_spinner_item);
//            goalAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
//            fitnessGoalSpinner.setAdapter(goalAdapter);
//
//            // Настройка Spinner для уровня подготовки
//            ArrayAdapter<CharSequence> modeAdapter = ArrayAdapter.createFromResource(
//                    this, R.array.training_modes, android.R.layout.simple_spinner_item);
//            modeAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
//            trainingModeSpinner.setAdapter(modeAdapter);
//
//            // Настройка Spinner для группы мышц
//            ArrayAdapter<CharSequence> muscleAdapter = ArrayAdapter.createFromResource(
//                    this, R.array.muscle_groups, android.R.layout.simple_spinner_item);
//            muscleAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
//            muscleGroupSpinner.setAdapter(muscleAdapter);
//
//            // Обработчики кнопок
//            generateButton.setOnClickListener(v -> generateWorkout());
//            viewListButton.setOnClickListener(v -> {
//                startActivity(new Intent(this, WorkoutListActivity.class));
//            });
//        }
//
//        private void generateWorkout() {
//            // Проверка авторизации
//            if (auth.getCurrentUser() == null) {
//                Snackbar.make(findViewById(R.id.generateButton),
//                        "Please log in first", Snackbar.LENGTH_SHORT).show();
//                return;
//            }
//
//            // Получение данных пользователя
//            String userId = auth.getCurrentUser().getUid();
//            userWorkoutsDb = FirebaseDatabase.getInstance()
//                    .getReference("AutoGeneratedWorkouts")
//                    .child(userId);
//
//            String fitnessGoal = fitnessGoalSpinner.getSelectedItem().toString();
//            String trainingMode = trainingModeSpinner.getSelectedItem().toString();
//            String muscleGroup = muscleGroupSpinner.getSelectedItem().toString();
//
//            // Получение веса и роста
//            String weightStr = weightInput.getText().toString();
//            String heightStr = heightInput.getText().toString();
//
//            // Проверка введенных данных
//            if (weightStr.isEmpty() || heightStr.isEmpty()) {
//                Snackbar.make(findViewById(R.id.generateButton),
//                        "Please enter your weight and height", Snackbar.LENGTH_SHORT).show();
//                return;
//            }
//
//            float weight;
//            int height;
//            try {
//                weight = Float.parseFloat(weightStr);
//                height = Integer.parseInt(heightStr);
//            } catch (NumberFormatException e) {
//                Snackbar.make(findViewById(R.id.generateButton),
//                        "Invalid weight or height format", Snackbar.LENGTH_SHORT).show();
//                return;
//            }
//
//            // Сохранение профиля пользователя с весом и ростом
//            String profileId = profilesDb.push().getKey();
//            UserProfile profile = new UserProfile(profileId, userId, fitnessGoal, trainingMode);
//            profile.setWeight(weight);
//            profile.setHeight(height);
//            profilesDb.child(userId).setValue(profile)
//                    .addOnFailureListener(e -> Snackbar.make(
//                            findViewById(R.id.generateButton),
//                            "Error saving profile: " + e.getMessage(),
//                            Snackbar.LENGTH_LONG
//                    ).show());
//
//            // Генерация упражнений на основе группы мышц и цели
//            List<String> exercises = new ArrayList<>();
//            switch (muscleGroup) {
//                case "Chest":
//                    exercises.add("Push-ups: 4 sets of 12");
//                    exercises.add("Bench Press: 3 sets of 10");
//                    exercises.add("Dumbbell Flyes: 3 sets of 12");
//                    break;
//                case "Back":
//                    exercises.add("Pull-ups: 3 sets of 8");
//                    exercises.add("Deadlifts: 3 sets of 8");
//                    exercises.add("Bent-over Rows: 3 sets of 10");
//                    break;
//                case "Arms":
//                    exercises.add("Bicep Curls: 3 sets of 12");
//                    exercises.add("Tricep Dips: 3 sets of 10");
//                    exercises.add("Hammer Curls: 3 sets of 12");
//                    break;
//                case "Legs":
//                    exercises.add("Squats: 4 sets of 10");
//                    exercises.add("Lunges: 3 sets of 12");
//                    exercises.add("Leg Press: 3 sets of 10");
//                    break;
//                case "Abs":
//                    exercises.add("Plank: 3 sets of 30 sec");
//                    exercises.add("Bicycle Crunches: 3 sets of 15");
//                    exercises.add("Leg Raises: 3 sets of 12");
//                    break;
//                case "Shoulders":
//                    exercises.add("Shoulder Press: 3 sets of 10");
//                    exercises.add("Lateral Raises: 3 sets of 12");
//                    exercises.add("Front Raises: 3 sets of 12");
//                    break;
//                default:
//                    // Если группа мышц не выбрана или неизвестна, используем цель
//                    switch (fitnessGoal) {
//                        case "Weight Loss":
//                            exercises.add("Running: 15 min");
//                            exercises.add("Jumping Jacks: 3 sets of 20");
//                            exercises.add("Bicycle Crunches: 3 sets of 15");
//                            break;
//                        case "Muscle Gain":
//                            exercises.add("Push-ups: 4 sets of 12");
//                            exercises.add("Squats: 4 sets of 10");
//                            exercises.add("Deadlifts: 3 sets of 8");
//                            break;
//                        default:
//                            exercises.add("Plank: 3 sets of 30 sec");
//                            exercises.add("Burpees: 3 sets of 10");
//                            exercises.add("Stretching: 10 min");
//                    }
//            }
//
//            // Перемешиваем упражнения и выбираем первые 3
//            Collections.shuffle(exercises);
//            String suggestedWorkout = String.join("\n", exercises.subList(0, Math.min(3, exercises.size())));
//
//            // Настройка параметров тренировки с учетом веса и роста
//            String intensityLevel = trainingMode.equals("Beginner") ? "Low"
//                    : trainingMode.equals("Intermediate") ? "Medium" : "High";
//            int sets = trainingMode.equals("Beginner") ? 3 : 4;
//            int duration = 45;
//
//            // Корректировка продолжительности и интенсивности на основе веса и роста
//            if (weight > 90 || height > 190) {
//                duration = 40; // Уменьшаем нагрузку для более тяжелых/высоких пользователей
//                intensityLevel = "Medium"; // Снижаем интенсивность
//            } else if (weight < 60 && height < 160) {
//                duration = 50; // Увеличиваем для более легких/низких
//            }
//
//            String date = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
//            String workoutId = userWorkoutsDb.push().getKey();
//
//            AutoGeneratedWorkout workout = new AutoGeneratedWorkout(
//                    workoutId, userId, suggestedWorkout,
//                    duration, intensityLevel, sets, date, fitnessGoal
//            );
//
//            // Сохранение тренировки
//            userWorkoutsDb.child(workoutId)
//                    .setValue(workout)
//                    .addOnSuccessListener(aVoid -> {
//                        workoutResult.setText("Generated Workout:\n" + suggestedWorkout);
//                        Snackbar.make(findViewById(R.id.generateButton),
//                                "Workout saved!", Snackbar.LENGTH_SHORT).show();
//                    })
//                    .addOnFailureListener(e -> Snackbar.make(
//                            findViewById(R.id.generateButton),
//                            "Error: " + e.getMessage(),
//                            Snackbar.LENGTH_LONG
//                    ).show());
//        }
//    }