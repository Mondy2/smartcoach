package com.example.smartcoach;

import android.content.Intent;
import android.os.Bundle;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.GridLayout;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.example.smartcoach.models.AutoGeneratedWorkout;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class WorkoutListActivity extends AppCompatActivity {

    private GridLayout workoutsGrid;
    private List<AutoGeneratedWorkout> workouts = new ArrayList<>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_workout_list);

        workoutsGrid = findViewById(R.id.workouts_grid);

        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setSelectedItemId(R.id.nav_generate_workout);
        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
            int itemId = item.getItemId();
            if (itemId == R.id.nav_home) {
                startActivity(new Intent(WorkoutListActivity.this, HomeActivity.class));
                finish();
                return true;
            } else if (itemId == R.id.nav_generate_workout) {
                return true;
            } else if (itemId == R.id.nav_settings) {
                startActivity(new Intent(WorkoutListActivity.this, SettingsActivity.class));
                finish();
                return true;
            }
            return false;
        });

        loadUserWorkouts();
    }

    private void loadUserWorkouts() {
        String userId = FirebaseAuth.getInstance().getCurrentUser().getUid();
        DatabaseReference workoutsRef = FirebaseDatabase.getInstance()
                .getReference("AutoGeneratedWorkouts")
                .child(userId);

        workoutsRef.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot snapshot) {
                workouts.clear();
                for (DataSnapshot ds : snapshot.getChildren()) {
                    AutoGeneratedWorkout workout = ds.getValue(AutoGeneratedWorkout.class);
                    if (workout != null) {
                        workouts.add(workout);
                    }
                }

                Collections.sort(workouts, new Comparator<AutoGeneratedWorkout>() {
                    @Override
                    public int compare(AutoGeneratedWorkout w1, AutoGeneratedWorkout w2) {
                        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
                        try {
                            Date date1 = dateFormat.parse(w1.getDate());
                            Date date2 = dateFormat.parse(w2.getDate());
                            return date2.compareTo(date1);
                        } catch (ParseException e) {
                            return 0;
                        }
                    }
                });

                displayWorkouts();
            }

            @Override
            public void onCancelled(DatabaseError error) {
                // Обробка помилки
            }
        });
    }

    private void displayWorkouts() {
        workoutsGrid.removeAllViews();

        for (int i = 0; i < workouts.size(); i++) {
            AutoGeneratedWorkout workout = workouts.get(i);
            View workoutView = LayoutInflater.from(this).inflate(R.layout.item_workout, workoutsGrid, false);

            TextView muscleGroupText = workoutView.findViewById(R.id.muscleGroupText);
            TextView dateText = workoutView.findViewById(R.id.dateText);
            TextView goalText = workoutView.findViewById(R.id.goalText);
            ImageView muscleImage = workoutView.findViewById(R.id.muscleImage);

            String rawGroup = workout.getMuscleGroup();
            String muscleGroup = (rawGroup == null || rawGroup.isEmpty())
                    ? WorkoutUtils.determineMuscleGroup(workout.getSuggestedWorkout())
                    : rawGroup;

            muscleGroup = muscleGroup.trim().toLowerCase(Locale.ROOT);

            String uiGroup = workout.getMuscleGroup();
            if (uiGroup == null || uiGroup.isEmpty()) {
                uiGroup = WorkoutUtils.translateMuscleGroup(
                        WorkoutUtils.determineMuscleGroup(workout.getSuggestedWorkout()));
            }

            String keyGroup = WorkoutUtils.uiToKeyMuscleGroup(uiGroup);

            WorkoutUtils.setMuscleImage(muscleImage, keyGroup);

            muscleGroupText.setText(uiGroup);
            muscleGroupText.setText(WorkoutUtils.translateMuscleGroup(muscleGroup));

            dateText.setText(workout.getDate());
            goalText.setText("Ціль: " + WorkoutUtils.translateWorkoutGoal(workout.getWorkoutGoal()));


            GridLayout.Spec rowSpec = GridLayout.spec(i / 2);
            GridLayout.Spec colSpec = GridLayout.spec(i % 2, 1f);
            GridLayout.LayoutParams params = new GridLayout.LayoutParams(rowSpec, colSpec);
            params.width = 0;
            params.height = GridLayout.LayoutParams.WRAP_CONTENT;
            params.setGravity(Gravity.FILL_HORIZONTAL);
            params.setMargins(4, 0, 4, 0);
            workoutView.setLayoutParams(params);

            workoutView.setOnClickListener(v -> {
                Intent intent = new Intent(WorkoutListActivity.this, WorkoutDetailActivity.class);
                intent.putExtra("WORKOUT_ID", workout.getAutoWorkoutID());
                intent.putExtra("USER_ID", workout.getUserID());
                startActivity(intent);
            });

            workoutsGrid.addView(workoutView);
        }
    }
}
//package com.example.smartcoach;
//
//import android.content.Intent;
//import android.os.Bundle;
//import android.view.Gravity;
//import android.view.LayoutInflater;
//import android.view.View;
//import android.widget.GridLayout;
//import android.widget.ImageView;
//import android.widget.TextView;
//
//import androidx.appcompat.app.AppCompatActivity;
//
//import com.example.smartcoach.models.AutoGeneratedWorkout;
//import com.google.android.material.bottomnavigation.BottomNavigationView;
//import com.google.firebase.auth.FirebaseAuth;
//import com.google.firebase.database.DataSnapshot;
//import com.google.firebase.database.DatabaseError;
//import com.google.firebase.database.DatabaseReference;
//import com.google.firebase.database.FirebaseDatabase;
//import com.google.firebase.database.ValueEventListener;
//
//import java.text.ParseException;
//import java.text.SimpleDateFormat;
//import java.util.ArrayList;
//import java.util.Collections;
//import java.util.Comparator;
//import java.util.Date;
//import java.util.List;
//import java.util.Locale;
//
//public class WorkoutListActivity extends AppCompatActivity {
//
//    private GridLayout workoutsGrid;
//    private List<AutoGeneratedWorkout> workouts = new ArrayList<>();
//
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_workout_list);
//
//        // Ініціалізація GridLayout
//        workoutsGrid = findViewById(R.id.workouts_grid);
//
//        // Налаштування Bottom Navigation
//        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
//        bottomNavigationView.setSelectedItemId(R.id.nav_generate_workout);
//        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
//            int itemId = item.getItemId();
//            if (itemId == R.id.nav_home) {
//                startActivity(new Intent(WorkoutListActivity.this, HomeActivity.class));
//                finish();
//                return true;
//            } else if (itemId == R.id.nav_generate_workout) {
//                return true;
//            } else if (itemId == R.id.nav_settings) {
//                startActivity(new Intent(WorkoutListActivity.this, SettingsActivity.class));
//                finish();
//                return true;
//            }
//            return false;
//        });
//
//        // Завантаження тренувань
//        loadUserWorkouts();
//    }
//
//    private void loadUserWorkouts() {
//        String userId = FirebaseAuth.getInstance().getCurrentUser().getUid();
//        DatabaseReference workoutsRef = FirebaseDatabase.getInstance()
//                .getReference("AutoGeneratedWorkouts")
//                .child(userId);
//
//        workoutsRef.addListenerForSingleValueEvent(new ValueEventListener() {
//            @Override
//            public void onDataChange(DataSnapshot snapshot) {
//                workouts.clear();
//                for (DataSnapshot ds : snapshot.getChildren()) {
//                    AutoGeneratedWorkout workout = ds.getValue(AutoGeneratedWorkout.class);
//                    if (workout != null) {
//                        workouts.add(workout);
//                    }
//                }
//
//                // Сортування тренувань за датою (від нових до старих)
//                Collections.sort(workouts, new Comparator<AutoGeneratedWorkout>() {
//                    @Override
//                    public int compare(AutoGeneratedWorkout w1, AutoGeneratedWorkout w2) {
//                        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
//                        try {
//                            Date date1 = dateFormat.parse(w1.getDate());
//                            Date date2 = dateFormat.parse(w2.getDate());
//                            return date2.compareTo(date1); // Сортування за спаданням (нові перші)
//                        } catch (ParseException e) {
//                            return 0;
//                        }
//                    }
//                });
//
//                // Додаємо тренування в GridLayout
//                displayWorkouts();
//            }
//
//            @Override
//            public void onCancelled(DatabaseError error) {
//                // Обробка помилки
//            }
//        });
//    }
//
//    private void displayWorkouts() {
//        workoutsGrid.removeAllViews();
//
//        for (int i = 0; i < workouts.size(); i++) {
//            AutoGeneratedWorkout workout = workouts.get(i);
//            View workoutView = LayoutInflater.from(this).inflate(R.layout.item_workout, workoutsGrid, false);
//
//            // Знаходимо елементи в картці
//            TextView muscleGroupText = workoutView.findViewById(R.id.muscleGroupText);
//            TextView dateText = workoutView.findViewById(R.id.dateText);
//            TextView goalText = workoutView.findViewById(R.id.goalText);
//            ImageView muscleImage = workoutView.findViewById(R.id.muscleImage);
//
//            // Встановлюємо дані
//            String muscleGroup = determineMuscleGroup(workout.getSuggestedWorkout());
//            muscleGroupText.setText(translateMuscleGroup(muscleGroup));
//            dateText.setText(workout.getDate());
//            goalText.setText("Ціль: " + translateWorkoutGoal(workout.getWorkoutGoal()));
//            setMuscleImage(muscleImage, muscleGroup);
//
//            // Налаштування GridLayout
//            GridLayout.Spec rowSpec = GridLayout.spec(i / 2);
//            GridLayout.Spec colSpec = GridLayout.spec(i % 2, 1f); // Вага 1f для рівномірного розподілу
//            GridLayout.LayoutParams params = new GridLayout.LayoutParams(rowSpec, colSpec);
//            params.width = 0; // Ширина розтягується по вазі
//            params.height = GridLayout.LayoutParams.WRAP_CONTENT;
//            params.setGravity(Gravity.FILL_HORIZONTAL);
//            params.setMargins(4, 0, 4, 0); // Відступи між картками
//            workoutView.setLayoutParams(params);
//
//            // Обробник натискання на картку
//            workoutView.setOnClickListener(v -> {
//                Intent intent = new Intent(WorkoutListActivity.this, WorkoutDetailActivity.class);
//                intent.putExtra("WORKOUT_ID", workout.getAutoWorkoutID());
//                intent.putExtra("USER_ID", workout.getUserID());
//                startActivity(intent);
//            });
//
//            workoutsGrid.addView(workoutView);
//        }
//    }
//
//    private String determineMuscleGroup(String suggestedWorkout) {
//        if (suggestedWorkout.toLowerCase().contains("push-ups") || suggestedWorkout.toLowerCase().contains("bench press")) {
//            return "Chest";
//        } else if (suggestedWorkout.toLowerCase().contains("pull-ups") || suggestedWorkout.toLowerCase().contains("deadlifts")) {
//            return "Back";
//        } else if (suggestedWorkout.toLowerCase().contains("bicep curls") || suggestedWorkout.toLowerCase().contains("tricep dips")) {
//            return "Arms";
//        } else if (suggestedWorkout.toLowerCase().contains("squats") || suggestedWorkout.toLowerCase().contains("lunges")) {
//            return "Legs";
//        } else if (suggestedWorkout.toLowerCase().contains("plank") || suggestedWorkout.toLowerCase().contains("crunches")) {
//            return "Abs";
//        } else if (suggestedWorkout.toLowerCase().contains("shoulder press") || suggestedWorkout.toLowerCase().contains("lateral raises")) {
//            return "Shoulders";
//        } else {
//            return "Full Body";
//        }
//    }
//
//    private String translateMuscleGroup(String muscleGroup) {
//        switch (muscleGroup.toLowerCase()) {
//            case "chest":
//                return "Груди";
//            case "back":
//                return "Спина";
//            case "arms":
//                return "Руки";
//            case "legs":
//                return "Ноги";
//            case "abs":
//                return "Прес";
//            case "shoulders":
//                return "Плечі";
//            case "full body":
//                return "Все тіло";
//            default:
//                return muscleGroup;
//        }
//    }
//
//    private String translateWorkoutGoal(String goal) {
//        switch (goal.toLowerCase()) {
//            case "weight loss":
//                return "Схуднення";
//            case "muscle gain":
//                return "Набір м’язової маси";
//            case "maintain shape":
//                return "Підтримка форми";
//            default:
//                return goal;
//        }
//    }
//
//    private void setMuscleImage(ImageView muscleImage, String muscleGroup) {
//        switch (muscleGroup.toLowerCase()) {
//            case "chest":
//                muscleImage.setImageResource(R.drawable.ic_chest);
//                break;
//            case "back":
//                muscleImage.setImageResource(R.drawable.ic_back);
//                break;
//            case "arms":
//                muscleImage.setImageResource(R.drawable.ic_arms);
//                break;
//            case "legs":
//                muscleImage.setImageResource(R.drawable.ic_legs);
//                break;
//            case "abs":
//                muscleImage.setImageResource(R.drawable.ic_abs);
//                break;
//            case "shoulders":
//                muscleImage.setImageResource(R.drawable.ic_shoulders);
//                break;
//            default:
//                muscleImage.setImageResource(R.drawable.ic_default_workout);
//                break;
//        }
//    }
//}

//package com.example.smartcoach;
//
//import android.content.Intent;
//import android.os.Bundle;
//import androidx.annotation.NonNull;
//import androidx.appcompat.app.AppCompatActivity;
//import androidx.recyclerview.widget.LinearLayoutManager;
//import androidx.recyclerview.widget.RecyclerView;
//
//import com.example.smartcoach.models.AutoGeneratedWorkout;
//import com.google.android.material.bottomnavigation.BottomNavigationView;
//import com.google.firebase.auth.FirebaseAuth;
//import com.google.firebase.database.DataSnapshot;
//import com.google.firebase.database.DatabaseError;
//import com.google.firebase.database.DatabaseReference;
//import com.google.firebase.database.FirebaseDatabase;
//import com.google.firebase.database.ValueEventListener;
//
//import java.util.ArrayList;
//import java.util.List;
//
//public class WorkoutListActivity extends AppCompatActivity {
//    private RecyclerView recyclerView;
//    private WorkoutAdapter adapter;
//    private List<AutoGeneratedWorkout> workouts = new ArrayList<>();
//
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_workout_list);
//
//        recyclerView = findViewById(R.id.workoutRecyclerView);
//        recyclerView.setLayoutManager(new LinearLayoutManager(this));
//
//        // Передаем VIEW_TYPE_LIST для использования item_workout.xml
//        adapter = new WorkoutAdapter(workouts, workout -> {
//            Intent intent = new Intent(WorkoutListActivity.this, WorkoutDetailActivity.class);
//            intent.putExtra("WORKOUT_ID", workout.getAutoWorkoutID());
//            intent.putExtra("USER_ID", workout.getUserID());
//            startActivity(intent);
//        }, WorkoutAdapter.VIEW_TYPE_LIST);
//
//        recyclerView.setAdapter(adapter);
//
//        // Настройка Bottom Navigation
//        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
//        bottomNavigationView.setSelectedItemId(R.id.nav_generate_workout); // Текущая страница связана с тренировками
//        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
//            int itemId = item.getItemId();
//            if (itemId == R.id.nav_home) {
//                startActivity(new Intent(WorkoutListActivity.this, HomeActivity.class));
//                finish();
//                return true;
//            } else if (itemId == R.id.nav_generate_workout) {
//                startActivity(new Intent(WorkoutListActivity.this, GenerateWorkoutActivity.class));
//                finish();
//                return true;
//            } else if (itemId == R.id.nav_settings) {
//                startActivity(new Intent(WorkoutListActivity.this, SettingsActivity.class));
//                finish();
//                return true;
//            }
//            return false;
//        });
//
//        loadUserWorkouts();
//    }
//
//    private void loadUserWorkouts() {
//        String userId = FirebaseAuth.getInstance().getCurrentUser().getUid();
//        DatabaseReference ref = FirebaseDatabase.getInstance()
//                .getReference("AutoGeneratedWorkouts")
//                .child(userId);
//
//        ref.addListenerForSingleValueEvent(new ValueEventListener() {
//            @Override
//            public void onDataChange(@NonNull DataSnapshot snapshot) {
//                workouts.clear();
//                for (DataSnapshot ds : snapshot.getChildren()) {
//                    AutoGeneratedWorkout w = ds.getValue(AutoGeneratedWorkout.class);
//                    if (w != null) {
//                        workouts.add(w);
//                    }
//                }
//                adapter.notifyDataSetChanged();
//            }
//
//            @Override
//            public void onCancelled(@NonNull DatabaseError error) {
//                // Можно добавить обработку ошибок, например, показать сообщение
//
//            }
//        });
//    }
//}
//
