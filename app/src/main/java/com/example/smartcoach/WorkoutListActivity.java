package com.example.smartcoach;

import android.content.Intent;
import android.os.Bundle;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.smartcoach.models.AutoGeneratedWorkout;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.List;

public class WorkoutListActivity extends AppCompatActivity {
    private RecyclerView recyclerView;
    private WorkoutAdapter adapter;
    private List<AutoGeneratedWorkout> workouts = new ArrayList<>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_workout_list);

        recyclerView = findViewById(R.id.workoutRecyclerView);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        // Передаем VIEW_TYPE_LIST для использования item_workout.xml
        adapter = new WorkoutAdapter(workouts, workout -> {
            Intent intent = new Intent(WorkoutListActivity.this, WorkoutDetailActivity.class);
            intent.putExtra("WORKOUT_ID", workout.getAutoWorkoutID());
            intent.putExtra("USER_ID", workout.getUserID());
            startActivity(intent);
        }, WorkoutAdapter.VIEW_TYPE_LIST);

        recyclerView.setAdapter(adapter);

        // Настройка Bottom Navigation
        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setSelectedItemId(R.id.nav_generate_workout); // Текущая страница связана с тренировками
        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
            int itemId = item.getItemId();
            if (itemId == R.id.nav_home) {
                startActivity(new Intent(WorkoutListActivity.this, HomeActivity.class));
                finish();
                return true;
            } else if (itemId == R.id.nav_generate_workout) {
                startActivity(new Intent(WorkoutListActivity.this, GenerateWorkoutActivity.class));
                finish();
                return true;
            } else if (itemId == R.id.nav_settings) {
                startActivity(new Intent(WorkoutListActivity.this, SettingsActivity.class));
                finish();
                return true;
            }
            return false;
        });

        loadUserWorkouts();
    }

    private void loadUserWorkouts() {
        String userId = FirebaseAuth.getInstance().getCurrentUser().getUid();
        DatabaseReference ref = FirebaseDatabase.getInstance()
                .getReference("AutoGeneratedWorkouts")
                .child(userId);

        ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                workouts.clear();
                for (DataSnapshot ds : snapshot.getChildren()) {
                    AutoGeneratedWorkout w = ds.getValue(AutoGeneratedWorkout.class);
                    if (w != null) {
                        workouts.add(w);
                    }
                }
                adapter.notifyDataSetChanged();
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                // Можно добавить обработку ошибок, например, показать сообщение

            }
        });
    }
}

