package com.example.smartcoach;

import android.content.Intent;
import android.os.Bundle;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.example.smartcoach.models.AutoGeneratedWorkout;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class WorkoutDetailActivity extends AppCompatActivity {

    private TextView tvDetailDate, tvDetailGoal, tvDetailSuggested, tvDetailIntensity, tvDetailSets, tvDetailDuration;
    private ImageView muscleImage;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_workout_detail);

        // Инициализация UI
        tvDetailDate = findViewById(R.id.tvDetailDate);
        tvDetailGoal = findViewById(R.id.tvDetailGoal);
        tvDetailSuggested = findViewById(R.id.tvDetailSuggested);
        tvDetailIntensity = findViewById(R.id.tvDetailIntensity);
        tvDetailSets = findViewById(R.id.tvDetailSets);
        tvDetailDuration = findViewById(R.id.tvDetailDuration);
        muscleImage = findViewById(R.id.muscle_image);

        // Получение данных из Intent
        String workoutId = getIntent().getStringExtra("WORKOUT_ID");
        String userId = getIntent().getStringExtra("USER_ID");

        if (workoutId == null || userId == null) {
            finish();
            return;
        }

        // Загрузка данных тренировки из Firebase
        loadWorkoutDetails(userId, workoutId);

        // Настройка Bottom Navigation
        BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
        bottomNavigationView.setSelectedItemId(R.id.nav_generate_workout);
        bottomNavigationView.setOnNavigationItemSelectedListener(item -> {
            int itemId = item.getItemId();
            if (itemId == R.id.nav_home) {
                startActivity(new Intent(WorkoutDetailActivity.this, HomeActivity.class));
                finish();
                return true;
            } else if (itemId == R.id.nav_generate_workout) {
                startActivity(new Intent(WorkoutDetailActivity.this, GenerateWorkoutActivity.class));
                finish();
                return true;
            } else if (itemId == R.id.nav_settings) {
                startActivity(new Intent(WorkoutDetailActivity.this, SettingsActivity.class));
                finish();
                return true;
            }
            return false;
        });
    }

    private void loadWorkoutDetails(String userId, String workoutId) {
        DatabaseReference ref = FirebaseDatabase.getInstance()
                .getReference("AutoGeneratedWorkouts")
                .child(userId)
                .child(workoutId);

        ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot snapshot) {
                AutoGeneratedWorkout workout = snapshot.getValue(AutoGeneratedWorkout.class);
                if (workout != null) {
                    // Установка данных в UI
                    tvDetailDate.setText(workout.getDate());
                    tvDetailGoal.setText("Goal: " + workout.getWorkoutGoal());
                    tvDetailSuggested.setText(workout.getSuggestedWorkout());
                    tvDetailIntensity.setText(workout.getIntensityLevel());
                    tvDetailSets.setText(String.valueOf(workout.getSets()));
                    tvDetailDuration.setText(String.valueOf(workout.getDuration()));

                    // Установка изображения группы мышц
                    String muscleGroup = determineMuscleGroup(workout.getSuggestedWorkout());
                    setMuscleImage(muscleGroup);
                } else {
                    finish();
                }
            }

            @Override
            public void onCancelled(DatabaseError error) {
                finish();
            }
        });
    }

    private String determineMuscleGroup(String suggestedWorkout) {
        if (suggestedWorkout.toLowerCase().contains("push-ups") || suggestedWorkout.toLowerCase().contains("bench press")) {
            return "Chest";
        } else if (suggestedWorkout.toLowerCase().contains("pull-ups") || suggestedWorkout.toLowerCase().contains("deadlifts")) {
            return "Back";
        } else if (suggestedWorkout.toLowerCase().contains("bicep curls") || suggestedWorkout.toLowerCase().contains("tricep dips")) {
            return "Arms";
        } else if (suggestedWorkout.toLowerCase().contains("squats") || suggestedWorkout.toLowerCase().contains("lunges")) {
            return "Legs";
        } else if (suggestedWorkout.toLowerCase().contains("plank") || suggestedWorkout.toLowerCase().contains("crunches")) {
            return "Abs";
        } else if (suggestedWorkout.toLowerCase().contains("shoulder press") || suggestedWorkout.toLowerCase().contains("lateral raises")) {
            return "Shoulders";
        } else {
            return "Full Body";
        }
    }

    private void setMuscleImage(String muscleGroup) {
        switch (muscleGroup.toLowerCase()) {
            case "chest":
                muscleImage.setImageResource(R.drawable.ic_chest);
                break;
            case "back":
                muscleImage.setImageResource(R.drawable.ic_back);
                break;
            case "arms":
                muscleImage.setImageResource(R.drawable.ic_arms);
                break;
            case "legs":
                muscleImage.setImageResource(R.drawable.ic_legs);
                break;
            case "abs":
                muscleImage.setImageResource(R.drawable.ic_abs);
                break;
            case "shoulders":
                muscleImage.setImageResource(R.drawable.ic_shoulders);
                break;
            default:
                muscleImage.setImageResource(R.drawable.ic_default_workout);
                break;
        }
    }
}/*package com.example.smartcoach;


import android.os.Bundle;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import com.example.smartcoach.models.AutoGeneratedWorkout;

public class WorkoutDetailActivity extends AppCompatActivity {
    public static final String EXTRA_WORKOUT = "extra_workout";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_workout_detail);

        AutoGeneratedWorkout workout = getIntent().getParcelableExtra(EXTRA_WORKOUT);
        if (workout == null) {
            finish();
            return;
        }

        ((TextView) findViewById(R.id.tvDetailDate)).setText(workout.getDate());
        ((TextView) findViewById(R.id.tvDetailGoal)).setText(workout.getWorkoutGoal());
        ((TextView) findViewById(R.id.tvDetailSuggested)).setText(workout.getSuggestedWorkout());
        ((TextView) findViewById(R.id.tvDetailIntensity)).setText(workout.getIntensityLevel());
        ((TextView) findViewById(R.id.tvDetailSets)).setText(String.valueOf(workout.getSets()));
        ((TextView) findViewById(R.id.tvDetailDuration)).setText(String.valueOf(workout.getDuration()));
    }
}
*/