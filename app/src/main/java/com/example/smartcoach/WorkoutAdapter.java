package com.example.smartcoach;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.example.smartcoach.models.AutoGeneratedWorkout;

import java.util.List;

public class WorkoutAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
    public static final int VIEW_TYPE_HOME = 0;
    public static final int VIEW_TYPE_LIST = 1;

    private List<AutoGeneratedWorkout> workouts;
    private OnWorkoutClickListener clickListener;
    private int viewType; // Тип отображения (для Home или List)

    public interface OnWorkoutClickListener {
        void onWorkoutClick(AutoGeneratedWorkout workout);
    }

    // Конструктор без clickListener (для WorkoutListActivity)
    public WorkoutAdapter(List<AutoGeneratedWorkout> workouts, int viewType) {
        this.workouts = workouts;
        this.viewType = viewType;
    }

    // Конструктор с clickListener (для HomeActivity)
    public WorkoutAdapter(List<AutoGeneratedWorkout> workouts, OnWorkoutClickListener clickListener, int viewType) {
        this.workouts = workouts;
        this.clickListener = clickListener;
        this.viewType = viewType;
    }

    @Override
    public int getItemViewType(int position) {
        return viewType; // Возвращаем тип в зависимости от активности
    }

    @NonNull
    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        if (viewType == VIEW_TYPE_HOME) {
            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_workout_card, parent, false);
            return new HomeWorkoutViewHolder(view);
        } else {
            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_workout, parent, false);
            return new ListWorkoutViewHolder(view);
        }
    }

    @Override
    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
        AutoGeneratedWorkout workout = workouts.get(position);

        if (holder instanceof HomeWorkoutViewHolder) {
            HomeWorkoutViewHolder homeHolder = (HomeWorkoutViewHolder) holder;
            // Установка заголовка и описания для HomeActivity
            homeHolder.workoutTitle.setText("Workout on " + workout.getDate());
            homeHolder.workoutDescription.setText("Goal: " + workout.getWorkoutGoal() + "\n" + workout.getSuggestedWorkout());

            // Определение группы мышц
            String muscleGroup = determineMuscleGroup(workout.getSuggestedWorkout());
            homeHolder.setMuscleImage(muscleGroup);

            // Настройка нажатия на карточку
            homeHolder.itemView.setOnClickListener(v -> clickListener.onWorkoutClick(workout));
            homeHolder.startButton.setOnClickListener(v -> clickListener.onWorkoutClick(workout));
        } else if (holder instanceof ListWorkoutViewHolder) {
            ListWorkoutViewHolder listHolder = (ListWorkoutViewHolder) holder;
            // Установка данных для WorkoutListActivity
            listHolder.dateText.setText(workout.getDate());
            listHolder.goalText.setText("Goal: " + workout.getWorkoutGoal());

            // Определение группы мышц и установка названия и изображения
            String muscleGroup = determineMuscleGroup(workout.getSuggestedWorkout());
            listHolder.muscleGroupText.setText(muscleGroup);
            listHolder.setMuscleImage(muscleGroup);

            // Настройка нажатия на карточку
            listHolder.itemView.setOnClickListener(v -> clickListener.onWorkoutClick(workout));
        }
    }

    @Override
    public int getItemCount() {
        return workouts.size();
    }

    // ViewHolder для HomeActivity (item_workout_card.xml)
    public static class HomeWorkoutViewHolder extends RecyclerView.ViewHolder {
        TextView workoutTitle, workoutDescription;
        ImageView muscleImage;
        Button startButton;

        public HomeWorkoutViewHolder(@NonNull View itemView) {
            super(itemView);
            workoutTitle = itemView.findViewById(R.id.workout_title);
            workoutDescription = itemView.findViewById(R.id.workout_description);
            muscleImage = itemView.findViewById(R.id.muscle_image);
            startButton = itemView.findViewById(R.id.start_workout_button);
        }

        public void setMuscleImage(String muscleGroup) {
            switch (muscleGroup.toLowerCase()) {
                case "chest":
                    muscleImage.setImageResource(R.drawable.ic_chest);
                    break;
                case "back":
                    muscleImage.setImageResource(R.drawable.ic_back);
                    break;
                case "arms":
                    muscleImage.setImageResource(R.drawable.ic_arms);
                    break;
                case "legs":
                    muscleImage.setImageResource(R.drawable.ic_legs);
                    break;
                case "abs":
                    muscleImage.setImageResource(R.drawable.ic_abs);
                    break;
                case "shoulders":
                    muscleImage.setImageResource(R.drawable.ic_shoulders);
                    break;
                default:
                    muscleImage.setImageResource(R.drawable.ic_default_workout);
                    break;
            }
        }
    }

    // ViewHolder для WorkoutListActivity (item_workout.xml)
    public static class ListWorkoutViewHolder extends RecyclerView.ViewHolder {
        TextView muscleGroupText, dateText, goalText;
        ImageView muscleImage;

        public ListWorkoutViewHolder(@NonNull View itemView) {
            super(itemView);
            muscleGroupText = itemView.findViewById(R.id.muscleGroupText);
            dateText = itemView.findViewById(R.id.dateText);
            goalText = itemView.findViewById(R.id.goalText);
            muscleImage = itemView.findViewById(R.id.muscleImage);
        }

        public void setMuscleImage(String muscleGroup) {
            switch (muscleGroup.toLowerCase()) {
                case "chest":
                    muscleImage.setImageResource(R.drawable.ic_chest);
                    break;
                case "back":
                    muscleImage.setImageResource(R.drawable.ic_back);
                    break;
                case "arms":
                    muscleImage.setImageResource(R.drawable.ic_arms);
                    break;
                case "legs":
                    muscleImage.setImageResource(R.drawable.ic_legs);
                    break;
                case "abs":
                    muscleImage.setImageResource(R.drawable.ic_abs);
                    break;
                case "shoulders":
                    muscleImage.setImageResource(R.drawable.ic_shoulders);
                    break;
                default:
                    muscleImage.setImageResource(R.drawable.ic_default_workout);
                    break;
            }
        }
    }

    private String determineMuscleGroup(String suggestedWorkout) {
        if (suggestedWorkout.toLowerCase().contains("push-ups") || suggestedWorkout.toLowerCase().contains("bench press")) {
            return "Chest";
        } else if (suggestedWorkout.toLowerCase().contains("pull-ups") || suggestedWorkout.toLowerCase().contains("deadlifts")) {
            return "Back";
        } else if (suggestedWorkout.toLowerCase().contains("bicep curls") || suggestedWorkout.toLowerCase().contains("tricep dips")) {
            return "Arms";
        } else if (suggestedWorkout.toLowerCase().contains("squats") || suggestedWorkout.toLowerCase().contains("lunges")) {
            return "Legs";
        } else if (suggestedWorkout.toLowerCase().contains("plank") || suggestedWorkout.toLowerCase().contains("crunches")) {
            return "Abs";
        } else if (suggestedWorkout.toLowerCase().contains("shoulder press") || suggestedWorkout.toLowerCase().contains("lateral raises")) {
            return "Shoulders";
        } else {
            return "Full Body";
        }
    }
}

//package com.example.smartcoach;
//
//import android.content.Intent;
//import android.view.LayoutInflater;
//import android.view.View;
//import android.view.ViewGroup;
//import android.widget.Button;
//import android.widget.ImageView;
//import android.widget.TextView;
//
//import androidx.annotation.NonNull;
//import androidx.recyclerview.widget.RecyclerView;
//
//import com.example.smartcoach.models.AutoGeneratedWorkout;
//
//import java.util.List;
//
//public class WorkoutAdapter extends RecyclerView.Adapter<WorkoutAdapter.WorkoutViewHolder> {
//    private List<AutoGeneratedWorkout> workouts;
//    private OnWorkoutClickListener clickListener;
//
//    public interface OnWorkoutClickListener {
//        void onWorkoutClick(AutoGeneratedWorkout workout);
//    }
//    public WorkoutAdapter(List<AutoGeneratedWorkout> workouts) {
//        this.workouts = workouts;
//    }
//    public WorkoutAdapter(List<AutoGeneratedWorkout> workouts, OnWorkoutClickListener clickListener) {
//        this.workouts = workouts;
//        this.clickListener = clickListener;
//    }
//
//    @NonNull
//    @Override
//    public WorkoutViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
//        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_workout_card, parent, false);
//        return new WorkoutViewHolder(view);
//    }
//
//    @Override
//    public void onBindViewHolder(@NonNull WorkoutViewHolder holder, int position) {
//        AutoGeneratedWorkout workout = workouts.get(position);
//
//        // Установка заголовка и описания
//        holder.workoutTitle.setText("Workout on " + workout.getDate());
//        holder.workoutDescription.setText("Goal: " + workout.getWorkoutGoal() + "\n" + workout.getSuggestedWorkout());
//
//        // Определение группы мышц
//        String muscleGroup = determineMuscleGroup(workout.getSuggestedWorkout());
//        holder.setMuscleImage(muscleGroup);
//
//        // Настройка нажатия на карточку
//        holder.itemView.setOnClickListener(v -> clickListener.onWorkoutClick(workout));
//        holder.startButton.setOnClickListener(v -> clickListener.onWorkoutClick(workout));
//    }
//
//    @Override
//    public int getItemCount() {
//        return workouts.size();
//    }
//
//    public static class WorkoutViewHolder extends RecyclerView.ViewHolder {
//        TextView workoutTitle, workoutDescription;
//        ImageView muscleImage;
//        Button startButton;
//
//        public WorkoutViewHolder(@NonNull View itemView) {
//            super(itemView);
//            workoutTitle = itemView.findViewById(R.id.workout_title);
//            workoutDescription = itemView.findViewById(R.id.workout_description);
//            muscleImage = itemView.findViewById(R.id.muscle_image);
//            startButton = itemView.findViewById(R.id.start_workout_button);
//        }
//
//        public void setMuscleImage(String muscleGroup) {
//            switch (muscleGroup.toLowerCase()) {
//                case "chest":
//                    muscleImage.setImageResource(R.drawable.ic_chest);
//                    break;
//                case "back":
//                    muscleImage.setImageResource(R.drawable.ic_back);
//                    break;
//                case "arms":
//                    muscleImage.setImageResource(R.drawable.ic_arms);
//                    break;
//                case "legs":
//                    muscleImage.setImageResource(R.drawable.ic_legs);
//                    break;
//                case "abs":
//                    muscleImage.setImageResource(R.drawable.ic_abs);
//                    break;
//                case "shoulders":
//                    muscleImage.setImageResource(R.drawable.ic_shoulders);
//                    break;
//                default:
//                    muscleImage.setImageResource(R.drawable.ic_default_workout);
//                    break;
//            }
//        }
//    }
//
//    private String determineMuscleGroup(String suggestedWorkout) {
//        if (suggestedWorkout.toLowerCase().contains("push-ups") || suggestedWorkout.toLowerCase().contains("bench press")) {
//            return "Chest";
//        } else if (suggestedWorkout.toLowerCase().contains("pull-ups") || suggestedWorkout.toLowerCase().contains("deadlifts")) {
//            return "Back";
//        } else if (suggestedWorkout.toLowerCase().contains("bicep curls") || suggestedWorkout.toLowerCase().contains("tricep dips")) {
//            return "Arms";
//        } else if (suggestedWorkout.toLowerCase().contains("squats") || suggestedWorkout.toLowerCase().contains("lunges")) {
//            return "Legs";
//        } else if (suggestedWorkout.toLowerCase().contains("plank") || suggestedWorkout.toLowerCase().contains("crunches")) {
//            return "Abs";
//        } else if (suggestedWorkout.toLowerCase().contains("shoulder press") || suggestedWorkout.toLowerCase().contains("lateral raises")) {
//            return "Shoulders";
//        } else {
//            return "Full Body";
//        }
//    }
//}
//
